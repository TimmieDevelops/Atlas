#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: EliminatedOverlay

#include "Basic.hpp"

#include "EliminatedOverlay_classes.hpp"
#include "EliminatedOverlay_parameters.hpp"


namespace SDK
{

// Function EliminatedOverlay.EliminatedOverlay_C.ExecuteUbergraph_EliminatedOverlay
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::ExecuteUbergraph_EliminatedOverlay(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "ExecuteUbergraph_EliminatedOverlay");

	Params::EliminatedOverlay_C_ExecuteUbergraph_EliminatedOverlay Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// const struct FGeometry&                 MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Tick");

	Params::EliminatedOverlay_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.OnPawnDied
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport&          DeathReport_0                                          (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UEliminatedOverlay_C::OnPawnDied(struct FFortPlayerDeathReport& DeathReport_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "OnPawnDied");

	Params::EliminatedOverlay_C_OnPawnDied Parms{};

	Parms.DeathReport_0 = std::move(DeathReport_0);

	UObject::ProcessEvent(Func, &Parms);

	DeathReport_0 = std::move(Parms.DeathReport_0);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdatePlace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdatePlace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdatePlace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdateViewTarget
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdateViewTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdateViewTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.HideExtraStuffForSpectating
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::HideExtraStuffForSpectating()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "HideExtraStuffForSpectating");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.Winner Announced
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FString&                    inString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UEliminatedOverlay_C::Winner_Announced(const class FString& inString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "Winner Announced");

	Params::EliminatedOverlay_C_Winner_Announced Parms{};

	Parms.inString = std::move(inString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function EliminatedOverlay.EliminatedOverlay_C.UpdateYouPlacedBoxVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::UpdateYouPlacedBoxVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "UpdateYouPlacedBoxVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.OnKillFeedUpdated
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UEliminatedOverlay_C::OnKillFeedUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "OnKillFeedUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function EliminatedOverlay.EliminatedOverlay_C.AnySquadMembersStillAlive
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AFortPlayerControllerAthena*      Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   AnyAlive                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UEliminatedOverlay_C::AnySquadMembersStillAlive(class AFortPlayerControllerAthena* Player, bool* AnyAlive)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "AnySquadMembersStillAlive");

	Params::EliminatedOverlay_C_AnySquadMembersStillAlive Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (AnyAlive != nullptr)
		*AnyAlive = Parms.AnyAlive;
}


// Function EliminatedOverlay.EliminatedOverlay_C.ProcessDeathReport
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport&          FortPlayerDeathReport                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class AFortPawn**                       KillerPawn                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool*                                   DidPlayerKillThemselves                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText*                            KillerName                                             (Parm, OutParm)

void UEliminatedOverlay_C::ProcessDeathReport(struct FFortPlayerDeathReport& FortPlayerDeathReport, class AFortPawn** KillerPawn, bool* DidPlayerKillThemselves, class FText* KillerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "ProcessDeathReport");

	Params::EliminatedOverlay_C_ProcessDeathReport Parms{};

	Parms.FortPlayerDeathReport = std::move(FortPlayerDeathReport);

	UObject::ProcessEvent(Func, &Parms);

	FortPlayerDeathReport = std::move(Parms.FortPlayerDeathReport);

	if (KillerPawn != nullptr)
		*KillerPawn = Parms.KillerPawn;

	if (DidPlayerKillThemselves != nullptr)
		*DidPlayerKillThemselves = Parms.DidPlayerKillThemselves;

	if (KillerName != nullptr)
		*KillerName = std::move(Parms.KillerName);
}


// Function EliminatedOverlay.EliminatedOverlay_C.SetBannerForKiller
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFortPlayerDeathReport&          FortPlayerDeathReport                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UEliminatedOverlay_C::SetBannerForKiller(struct FFortPlayerDeathReport& FortPlayerDeathReport)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("EliminatedOverlay_C", "SetBannerForKiller");

	Params::EliminatedOverlay_C_SetBannerForKiller Parms{};

	Parms.FortPlayerDeathReport = std::move(FortPlayerDeathReport);

	UObject::ProcessEvent(Func, &Parms);

	FortPlayerDeathReport = std::move(Parms.FortPlayerDeathReport);
}

}

