#pragma once

/*
* SDK generated by Dumper-8
*
* https://github.com/NotTacs/Dumper-8
*/

// Package: BulletWhipTrackerComponent

#include "Basic.hpp"

#include "BulletWhipTrackerComponent_classes.hpp"
#include "BulletWhipTrackerComponent_parameters.hpp"


namespace SDK
{

// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.ExecuteUbergraph_BulletWhipTrackerComponent
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBulletWhipTrackerComponent_C::ExecuteUbergraph_BulletWhipTrackerComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "ExecuteUbergraph_BulletWhipTrackerComponent");

	Params::BulletWhipTrackerComponent_C_ExecuteUbergraph_BulletWhipTrackerComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.Update Velocity
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   Current_Velocity                                       (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBulletWhipTrackerComponent_C::Update_Velocity(const struct FVector& Current_Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "Update Velocity");

	Params::BulletWhipTrackerComponent_C_Update_Velocity Parms{};

	Parms.Current_Velocity = std::move(Current_Velocity);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.Reset
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// const struct FVector&                   StartLocation_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBulletWhipTrackerComponent_C::Reset(const struct FVector& StartLocation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "Reset");

	Params::BulletWhipTrackerComponent_C_Reset Parms{};

	Parms.StartLocation_0 = std::move(StartLocation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBulletWhipTrackerComponent_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "ReceiveTick");

	Params::BulletWhipTrackerComponent_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.TrackWhipStatus
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool*                                   Changed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float*                                  Whip_Distance                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBulletWhipTrackerComponent_C::TrackWhipStatus(bool* Changed, float* Whip_Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "TrackWhipStatus");

	Params::BulletWhipTrackerComponent_C_TrackWhipStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Changed != nullptr)
		*Changed = Parms.Changed;

	if (Whip_Distance != nullptr)
		*Whip_Distance = Parms.Whip_Distance;
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.GetLocalPawnForTracking
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class USceneComponent*                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class USceneComponent* UBulletWhipTrackerComponent_C::GetLocalPawnForTracking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "GetLocalPawnForTracking");

	Params::BulletWhipTrackerComponent_C_GetLocalPawnForTracking Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BulletWhipTrackerComponent.BulletWhipTrackerComponent_C.PlayWhipSound
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBulletWhipTrackerComponent_C::PlayWhipSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BulletWhipTrackerComponent_C", "PlayWhipSound");

	UObject::ProcessEvent(Func, nullptr);
}

}

